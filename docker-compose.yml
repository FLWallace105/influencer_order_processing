---
version: '2'
services:

  redis:
    image: redis
    ports:
      - 6379

  resque_web:
    #image: rescue_web
    build:
      context: .
      dockerfile: Dockerfile.resque_web
    depends_on:
      - redis
    ports:
      - 5678
    environment:
      - RESQUE_WEB_REDIS=redis:6379
    volumes:
      - rescue-web-data:/data

  web:
    #image: influencer_orders
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - 9292:9292
    volumes:
      - app-output:/tmp
      - ./:/app
    depends_on:
      - postgres
      - redis
      - elasticsearch
    command: ["shotgun", "--host", "0.0.0.0", "-p", "9292", "-r", "./config/environment.rb"]

  worker:
    #image: influencer_orders
    build:
      context: .
      dockerfile: Dockerfile
    command: ["shotgun"]
    depends_on:
      - redis
      - postgres
      - ftp
      - elasticsearch
    volumes:
      - app-output:/tmp
      - ./:/app
    env_file: .env
    environment:
      - QUEUE=*
      - VERBOSE=true
    command: ["rake", "resque:work"]

  postgres:
    image: postgres
    env_file: .env
    ports:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: thajeztah/pgadmin4
    ports:
      - 5050
    volumes:
      - pgadmin-data:/pgadmin

  ftp:
    #image: ftp
    build:
      context: .
      dockerfile: Dockerfile.ftp
    volumes:
      - ./test/ftp_mnt:/home

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms100m -Xmx100m"
      - discovery.type=single-node
    env_file: .env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

volumes:
  app-output:
  rescue-web-data:
  postgres-data:
  pgadmin-data:
  elasticsearch-data:

